@import '../theme/dark.scss';
@import '../theme/light.scss';
@import '../theme/default.scss';

$themes: (
    default: $default,
    dark: $dark,
    light: $light
);

$color: '';
$bg_color: '';
$border_color: '';

//遍历主题map
@mixin themeify {
    
    @if($color != 'none') {
        color: map-get(map-get($themes, default), $color);
    }
    @if($bg_color != 'none') {
        background-color: map-get(map-get($themes, default), $bg_color);
    }
    @if($border_color != 'none') {
        border-color: map-get(map-get($themes, default), $border_color);
    }
    // background-color: $bg_color;
    @each $theme-name, $theme-map in $themes {
        //!global 把局部变量强升为全局变量
        $theme-map: $theme-map !global;

        //判断html的data-theme的属性值  #{}是sass的插值表达式
        //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot
        [data-theme="#{$theme-name}"] & {
            @content;
        }
    }
}

//声明一个根据Key获取颜色的function
@function themed($key) {
    @return map-get($theme-map, $key);
}

@mixin theme_color($color: none, $bg_color: none, $border_color: none) {
    $color: $color !global;
    $bg_color: $bg_color !global;
    $border_color: $border_color !global;
    @include themeify {
        @if($color != 'none') {
            color: themed($color);
        }
        @if($bg_color != 'none') {
            background-color: themed($bg_color);
        }
        @if($border_color != 'none') {
            border-color: themed($border_color);
        }
    }
}